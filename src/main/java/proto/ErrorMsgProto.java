// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ErrorMsg.proto

package proto;

public final class ErrorMsgProto {
  private ErrorMsgProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code proto.ErrorCode}
   *
   * <pre>
   *每一个errorcode需要去com.by.util.BusinessException.java 中添加一些对应的错误描述信息
   * </pre>
   */
  public enum ErrorCode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NETWORK_EROR = -2;</code>
     *
     * <pre>
     *网络错误
     * </pre>
     */
    NETWORK_EROR(0, -2),
    /**
     * <code>UNKNOW = -1;</code>
     *
     * <pre>
     *未知错误
     * </pre>
     */
    UNKNOW(1, -1),
    /**
     * <code>SUCCEED = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    SUCCEED(2, 0),
    /**
     * <code>SYS_SESSION_EXPIRY = 1;</code>
     *
     * <pre>
     ** 0-100系统消息
     * </pre>
     */
    SYS_SESSION_EXPIRY(3, 1),
    /**
     * <code>PLAYER_IS_OTHER_LOGIN = 100;</code>
     *
     * <pre>
     ** 101-200个人共同提示消息
     * </pre>
     */
    PLAYER_IS_OTHER_LOGIN(4, 100),
    /**
     * <code>LOGIN_ACCOUNT_PASSWORD_ERROR = 101;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    LOGIN_ACCOUNT_PASSWORD_ERROR(5, 101),
    /**
     * <code>LOGIN_ACCOUNT_NULLITY = 102;</code>
     *
     * <pre>
     *账号冻结
     * </pre>
     */
    LOGIN_ACCOUNT_NULLITY(6, 102),
    /**
     * <code>LOGIN_BINDING_OTHER_MACHINE = 103;</code>
     *
     * <pre>
     *绑定其它机器
     * </pre>
     */
    LOGIN_BINDING_OTHER_MACHINE(7, 103),
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGON = 104;</code>
     *
     * <pre>
     *由于系统维护，暂时停止游戏系统的登录服务，请留意网站公告信息！
     * </pre>
     */
    LOGIN_SYSTEM_ENJOIN_LOGON(8, 104),
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGON_IP = 105;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您所在的 IP 地址的登录功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    LOGIN_SYSTEM_ENJOIN_LOGON_IP(9, 105),
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGIN_MACHINE = 106;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您的机器的登录功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    LOGIN_SYSTEM_ENJOIN_LOGIN_MACHINE(10, 106),
    /**
     * <code>REGISTER_SYSTEM_ENJOIN = 107;</code>
     *
     * <pre>
     *注册暂停 提示
     * </pre>
     */
    REGISTER_SYSTEM_ENJOIN(11, 107),
    /**
     * <code>LOGIN_SYSTEM_ENJOIN = 108;</code>
     *
     * <pre>
     *登陆暂停 提示
     * </pre>
     */
    LOGIN_SYSTEM_ENJOIN(12, 108),
    /**
     * <code>REGISTER_SYSTEM_FORBID_NAME = 109;</code>
     *
     * <pre>
     *抱歉地通知您，您所输入的登录帐号名含有限制字符串，请更换帐号名后再次申请帐号！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_NAME(13, 109),
    /**
     * <code>REGISTER_SYSTEM_FORBID_NICKNAME = 110;</code>
     *
     * <pre>
     *抱歉地通知您，您所输入的昵称名含有限制字符串，请更换帐号名后再次申请帐号！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_NICKNAME(14, 110),
    /**
     * <code>REGISTER_SYSTEM_FORBID_IP = 111;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您所在的 IP 地址的注册功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_IP(15, 111),
    /**
     * <code>REGISTER_SYSTEM_FORBID_MACHINE = 112;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您的机器的注册功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_MACHINE(16, 112),
    /**
     * <code>REGISTER_SYSTEM_FORBID_ACCOUNTS_REG = 113;</code>
     *
     * <pre>
     *此账号已被注册，请换另一账号尝试再次注册！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_ACCOUNTS_REG(17, 113),
    /**
     * <code>REGISTER_SYSTEM_FORBID_NICKNAME_REG = 114;</code>
     *
     * <pre>
     *此昵称已被注册，请换另一昵称尝试再次注册！
     * </pre>
     */
    REGISTER_SYSTEM_FORBID_NICKNAME_REG(18, 114),
    /**
     * <code>GAME_SERVER_LOGON = 115;</code>
     *
     * <pre>
     * 你已经在别的房间了 无法登陆此房间
     * </pre>
     */
    GAME_SERVER_LOGON(19, 115),
    /**
     * <code>GAME_SERVER_ENTERROOM = 116;</code>
     *
     * <pre>
     *登陆房间人数已满
     * </pre>
     */
    GAME_SERVER_ENTERROOM(20, 116),
    /**
     * <code>GAME_SERVER_ENTERROOMChari = 117;</code>
     *
     * <pre>
     * 椅子位置已被占用
     * </pre>
     */
    GAME_SERVER_ENTERROOMChari(21, 117),
    /**
     * <code>GAME_SERVER_ENTERROOMCHARITABLE = 118;</code>
     *
     * <pre>
     * 你已经在一个桌子中了 请勿重复 坐下
     * </pre>
     */
    GAME_SERVER_ENTERROOMCHARITABLE(22, 118),
    /**
     * <code>GAME_SERVER_MACHEGAMEOVER = 119;</code>
     *
     * <pre>
     * 比赛已经结束或者比赛还没开始
     * </pre>
     */
    GAME_SERVER_MACHEGAMEOVER(23, 119),
    /**
     * <code>GAME_SERVER_ISNOTSINGUP = 120;</code>
     *
     * <pre>
     * 你没有报名不能参加比赛
     * </pre>
     */
    GAME_SERVER_ISNOTSINGUP(24, 120),
    /**
     * <code>SAVE_MONEY_ENJOININSURE = 130;</code>
     *
     * <pre>
     *系统禁止了您所在的 IP 地址的游戏服务权限
     * </pre>
     */
    SAVE_MONEY_ENJOININSURE(25, 130),
    /**
     * <code>SAVE_MONEY_ENJOINLOGIN = 131;</code>
     *
     * <pre>
     *系统禁止了您的机器的游戏服务权限
     * </pre>
     */
    SAVE_MONEY_ENJOINLOGIN(26, 131),
    /**
     * <code>SAVE_MONEY_NOTHISUSER = 132;</code>
     *
     * <pre>
     *您的帐号不存在或者密码输入有误
     * </pre>
     */
    SAVE_MONEY_NOTHISUSER(27, 132),
    /**
     * <code>SAVE_MONEY_NULLITY = 133;</code>
     *
     * <pre>
     *您的帐号暂时处于冻结状态
     * </pre>
     */
    SAVE_MONEY_NULLITY(28, 133),
    /**
     * <code>SAVE_MONEY_STUNDOWN = 134;</code>
     *
     * <pre>
     *您的帐号使用了安全关闭功能
     * </pre>
     */
    SAVE_MONEY_STUNDOWN(29, 134),
    /**
     * <code>SAVE_MONEY_MOORMACHINE = 135;</code>
     *
     * <pre>
     *您的帐号使用固定机器登录功能
     * </pre>
     */
    SAVE_MONEY_MOORMACHINE(30, 135),
    /**
     * <code>SAVE_MONEY_LESSMONEY = 136;</code>
     *
     * <pre>
     *存入保险柜的游戏币数目过少
     * </pre>
     */
    SAVE_MONEY_LESSMONEY(31, 136),
    /**
     * <code>SAVE_MONEY_LESSGAMEMONEY = 137;</code>
     *
     * <pre>
     *您当前游戏币的可用余额不足，游戏币存入失败
     * </pre>
     */
    SAVE_MONEY_LESSGAMEMONEY(32, 137),
    /**
     * <code>SAVE_MONEY_INGAME = 138;</code>
     *
     * <pre>
     *您正在游戏中
     * </pre>
     */
    SAVE_MONEY_INGAME(33, 138),
    /**
     * <code>SAVE_MONEY_BADPWD = 139;</code>
     *
     * <pre>
     *您的保险柜密码不正确或者输入有误，请查证后再次尝试！
     * </pre>
     */
    SAVE_MONEY_BADPWD(34, 139),
    /**
     * <code>CHANGE_MONEY_LESSMONEY = 140;</code>
     *
     * <pre>
     *兑换的金币数目过少
     * </pre>
     */
    CHANGE_MONEY_LESSMONEY(35, 140),
    /**
     * <code>CHANGE_MONEY_NOTMONEY = 141;</code>
     *
     * <pre>
     *用户金币数目没有或者兑换数目超过了拥有的金币数
     * </pre>
     */
    CHANGE_MONEY_NOTMONEY(36, 141),
    /**
     * <code>GET_USERINFO_NOUSER = 142;</code>
     *
     * <pre>
     *该用户不存在
     * </pre>
     */
    GET_USERINFO_NOUSER(37, 142),
    /**
     * <code>GET_USERINFO_FORBIDNICKMAE = 143;</code>
     *
     * <pre>
     *您所输入的游戏昵称名含有限制字符串，请更换昵称名后再次修改！
     * </pre>
     */
    GET_USERINFO_FORBIDNICKMAE(38, 143),
    /**
     * <code>GET_USERINFO_INUSERNICKNAME = 144;</code>
     *
     * <pre>
     *此昵称已被其他玩家使用了，请更换昵称名后再次修改！
     * </pre>
     */
    GET_USERINFO_INUSERNICKNAME(39, 144),
    /**
     * <code>GET_USERINFO_NULLNICKNAME = 145;</code>
     *
     * <pre>
     *昵称不能为空
     * </pre>
     */
    GET_USERINFO_NULLNICKNAME(40, 145),
    /**
     * <code>UPDATE_LOGINPWD_NOTINPWD = 146;</code>
     *
     * <pre>
     *新帐号密码为空，不允许设置密码为空，请查证后再次尝试！
     * </pre>
     */
    UPDATE_LOGINPWD_NOTINPWD(41, 146),
    /**
     * <code>SAVEORTAKE_MONEY_ERROR = 147;</code>
     *
     * <pre>
     *存入或者取出幸运豆数量不能为空
     * </pre>
     */
    SAVEORTAKE_MONEY_ERROR(42, 147),
    /**
     * <code>TAKE_MONEY_NOCODE = 148;</code>
     *
     * <pre>
     *取出幸运豆是，请输入保险柜密码
     * </pre>
     */
    TAKE_MONEY_NOCODE(43, 148),
    /**
     * <code>UPDATE_PWD_NOPWD = 149;</code>
     *
     * <pre>
     *原始密码不能为空
     * </pre>
     */
    UPDATE_PWD_NOPWD(44, 149),
    /**
     * <code>SAVE_MONEY_NOTENOUGHMONEY = 150;</code>
     *
     * <pre>
     *您的保险柜余额不足
     * </pre>
     */
    SAVE_MONEY_NOTENOUGHMONEY(45, 150),
    /**
     * <code>MONEY_NOT_ENOUGH = 151;</code>
     *
     * <pre>
     *你身上带的钱不足，不能进入房间
     * </pre>
     */
    MONEY_NOT_ENOUGH(46, 151),
    /**
     * <code>ROOM_FULL = 152;</code>
     *
     * <pre>
     * 人数已满
     * </pre>
     */
    ROOM_FULL(47, 152),
    /**
     * <code>SING_UP_MAX = 153;</code>
     *
     * <pre>
     * 最大人报名次数限制
     * </pre>
     */
    SING_UP_MAX(48, 153),
    /**
     * <code>SING_NOT_UP = 154;</code>
     *
     * <pre>
     *  比赛开始不能退出比赛
     * </pre>
     */
    SING_NOT_UP(49, 154),
    /**
     * <code>USER_LOCK_MACHINE = 155;</code>
     *
     * <pre>
     *锁定本家失败密码输入有误
     * </pre>
     */
    USER_LOCK_MACHINE(50, 155),
    /**
     * <code>PROP_CHANGE_LESS = 156;</code>
     *
     * <pre>
     *兑换的道具大于自己拥有的。
     * </pre>
     */
    PROP_CHANGE_LESS(51, 156),
    /**
     * <code>USER_LOGIN_OTHER = 157;</code>
     *
     * <pre>
     *兑换的道具大于自己拥有的。
     * </pre>
     */
    USER_LOGIN_OTHER(52, 157),
    /**
     * <code>LOGIN_ACCOUNT_ERROR = 158;</code>
     *
     * <pre>
     *用户名不存在
     * </pre>
     */
    LOGIN_ACCOUNT_ERROR(53, 158),
    /**
     * <code>LOGIN_PASSWORD_ERROR = 159;</code>
     *
     * <pre>
     *密码错误
     * </pre>
     */
    LOGIN_PASSWORD_ERROR(54, 159),
    /**
     * <code>LOGIN_NOTFIND_GIFT = 160;</code>
     *
     * <pre>
     * 没找到对应的道具
     * </pre>
     */
    LOGIN_NOTFIND_GIFT(55, 160),
    /**
     * <code>LOGIN_USERSCORE_ERROR = 161;</code>
     *
     * <pre>
     * 用户财富信息出错
     * </pre>
     */
    LOGIN_USERSCORE_ERROR(56, 161),
    /**
     * <code>LOGIN_USERSCORE_NOTENOUGH = 162;</code>
     *
     * <pre>
     *用户钱财不足
     * </pre>
     */
    LOGIN_USERSCORE_NOTENOUGH(57, 162),
    /**
     * <code>LOGIN_UPDATE_DATE_ERROR = 163;</code>
     *
     * <pre>
     * 更新数据出错了
     * </pre>
     */
    LOGIN_UPDATE_DATE_ERROR(58, 163),
    /**
     * <code>LOGIN_BANK_PASWD_ERROR = 164;</code>
     *
     * <pre>
     * 保险柜密码错误
     * </pre>
     */
    LOGIN_BANK_PASWD_ERROR(59, 164),
    /**
     * <code>LOGIN_GIVE_ROSE_NO_ZERO = 165;</code>
     *
     * <pre>
     *赠送的数量不能为0
     * </pre>
     */
    LOGIN_GIVE_ROSE_NO_ZERO(60, 165),
    /**
     * <code>LOGIN_GIVE_ROSE_TO_ME = 166;</code>
     *
     * <pre>
     * 不能自己赠送给自己
     * </pre>
     */
    LOGIN_GIVE_ROSE_TO_ME(61, 166),
    /**
     * <code>LOGIN_IP_COUNT = 167;</code>
     *
     * <pre>
     * 你注册使用的ip 数已经达到最大上限
     * </pre>
     */
    LOGIN_IP_COUNT(62, 167),
    /**
     * <code>LOGIN_MAC_COUNT = 168;</code>
     *
     * <pre>
     * 你所使用的机器码  今天已经达到了最大上限
     * </pre>
     */
    LOGIN_MAC_COUNT(63, 168),
    /**
     * <code>INVITE_USER_SCORE = 169;</code>
     *
     * <pre>
     *邀请用户领取幸运豆失败
     * </pre>
     */
    INVITE_USER_SCORE(64, 169),
    /**
     * <code>USER_INVITED_SCORE = 170;</code>
     *
     * <pre>
     *已经被邀请过不能重复领取奖励
     * </pre>
     */
    USER_INVITED_SCORE(65, 170),
    /**
     * <code>RADPACKETCODING_ERR = 171;</code>
     *
     * <pre>
     *红包兑换码错误
     * </pre>
     */
    RADPACKETCODING_ERR(66, 171),
    /**
     * <code>RADPACKETCODING_USED = 172;</code>
     *
     * <pre>
     *红包码使用过
     * </pre>
     */
    RADPACKETCODING_USED(67, 172),
    /**
     * <code>USER_INVITED_USERSELF = 173;</code>
     *
     * <pre>
     *用户不能自己邀请自己
     * </pre>
     */
    USER_INVITED_USERSELF(68, 173),
    /**
     * <code>USER_INVITED_NOEXIST = 174;</code>
     *
     * <pre>
     *邀请码错误
     * </pre>
     */
    USER_INVITED_NOEXIST(69, 174),
    /**
     * <code>RADPACKETCODING_ERROE = 175;</code>
     *
     * <pre>
     *红包兑换码生成错误
     * </pre>
     */
    RADPACKETCODING_ERROE(70, 175),
    /**
     * <code>LOGIN_MAC_EVER_COUNT = 176;</code>
     *
     * <pre>
     * 你所使用的机器码  已经达到了最大上限
     * </pre>
     */
    LOGIN_MAC_EVER_COUNT(71, 176),
    /**
     * <code>LOGIN_EVENT_NOTBEGIN = 177;</code>
     *
     * <pre>
     * 活动还未开始
     * </pre>
     */
    LOGIN_EVENT_NOTBEGIN(72, 177),
    /**
     * <code>LOGIN_EVENT_FINISHED = 178;</code>
     *
     * <pre>
     *活动已经结束
     * </pre>
     */
    LOGIN_EVENT_FINISHED(73, 178),
    /**
     * <code>LOGIN_EVENT_ZZ_NOTENOUGH = 179;</code>
     *
     * <pre>
     * 你的粽子不够了
     * </pre>
     */
    LOGIN_EVENT_ZZ_NOTENOUGH(74, 179),
    /**
     * <code>RADPACKETCODING_RECEIVED = 180;</code>
     *
     * <pre>
     *您已经领取过新手礼包，请勿重新使用！
     * </pre>
     */
    RADPACKETCODING_RECEIVED(75, 180),
    /**
     * <code>GAME_RANK_NOT_IN_RANK = 181;</code>
     *
     * <pre>
     *未进入排名，无法领奖
     * </pre>
     */
    GAME_RANK_NOT_IN_RANK(76, 181),
    /**
     * <code>GAME_RANK_RANK_AWARD_RECVED = 182;</code>
     *
     * <pre>
     *排名奖励已经领取过
     * </pre>
     */
    GAME_RANK_RANK_AWARD_RECVED(77, 182),
    /**
     * <code>GAME_RANK_THUMB_DONE = 183;</code>
     *
     * <pre>
     *不能重复点赞
     * </pre>
     */
    GAME_RANK_THUMB_DONE(78, 183),
    /**
     * <code>GAME_RANK_THUMB_REACH_MAX = 184;</code>
     *
     * <pre>
     *此榜单当日点赞次数已达最大值
     * </pre>
     */
    GAME_RANK_THUMB_REACH_MAX(79, 184),
    /**
     * <code>GAME_ONLINE_TIME_LOW = 185;</code>
     *
     * <pre>
     *领取在线奖励的时间不到
     * </pre>
     */
    GAME_ONLINE_TIME_LOW(80, 185),
    /**
     * <code>GAME_ONLINE_RECEIVE = 186;</code>
     *
     * <pre>
     *你已经领取过奖励了
     * </pre>
     */
    GAME_ONLINE_RECEIVE(81, 186),
    /**
     * <code>GAME_RANK_SAVING = 187;</code>
     *
     * <pre>
     *排行榜单生成中
     * </pre>
     */
    GAME_RANK_SAVING(82, 187),
    /**
     * <code>LOGIN_VERIFY_FAILED = 188;</code>
     *
     * <pre>
     *手机验证失败
     * </pre>
     */
    LOGIN_VERIFY_FAILED(83, 188),
    /**
     * <code>QIAN_DAO_TODAY_SIGNED = 189;</code>
     */
    QIAN_DAO_TODAY_SIGNED(84, 189),
    /**
     * <code>QIAN_DAO_RECV_DISABLE = 190;</code>
     */
    QIAN_DAO_RECV_DISABLE(85, 190),
    /**
     * <code>QIAN_DAO_RECV_DONE = 191;</code>
     */
    QIAN_DAO_RECV_DONE(86, 191),
    /**
     * <code>RANK_TODAY_CACHE_EMPTY = 192;</code>
     */
    RANK_TODAY_CACHE_EMPTY(87, 192),
    /**
     * <code>RANK_YESTERDAY_CACHE_EMPTY = 193;</code>
     */
    RANK_YESTERDAY_CACHE_EMPTY(88, 193),
    /**
     * <code>LOGIN_PASSWD_LENGTH_ERR = 194;</code>
     */
    LOGIN_PASSWD_LENGTH_ERR(89, 194),
    /**
     * <code>LOGIN_PHONE_FORMAT_ERR = 195;</code>
     */
    LOGIN_PHONE_FORMAT_ERR(90, 195),
    /**
     * <code>LOGIN_VERIFYCODE_TOOFREQUENT = 196;</code>
     */
    LOGIN_VERIFYCODE_TOOFREQUENT(91, 196),
    /**
     * <code>LOGIN_USEITEM_LEVEL_NOTENOUGH = 197;</code>
     */
    LOGIN_USEITEM_LEVEL_NOTENOUGH(92, 197),
    /**
     * <code>LOGIN_USEPACK_INROOM = 198;</code>
     */
    LOGIN_USEPACK_INROOM(93, 198),
    /**
     * <code>LOGIN_USERPACK_FULL = 199;</code>
     */
    LOGIN_USERPACK_FULL(94, 199),
    /**
     * <code>LOGIN_USER_ALREADY_GETPRIZE = 200;</code>
     */
    LOGIN_USER_ALREADY_GETPRIZE(95, 200),
    /**
     * <code>LOGIN_USER_NOFESTIVAL = 201;</code>
     */
    LOGIN_USER_NOFESTIVAL(96, 201),
    /**
     * <code>LOGIN_MUSTBEPOSITIVE = 202;</code>
     */
    LOGIN_MUSTBEPOSITIVE(97, 202),
    /**
     * <code>GAME_RANK_THUMB_TO_SELF = 203;</code>
     *
     * <pre>
     *游戏排行榜,不能对自己点赞
     * </pre>
     */
    GAME_RANK_THUMB_TO_SELF(98, 203),
    /**
     * <code>MATCH_YI_BAO_MING = 1940;</code>
     *
     * <pre>
     *您已经报名此场比赛
     * </pre>
     */
    MATCH_YI_BAO_MING(99, 1940),
    /**
     * <code>MATCH_WEI_BAO_MING = 1941;</code>
     *
     * <pre>
     *您未报名此场比赛
     * </pre>
     */
    MATCH_WEI_BAO_MING(100, 1941),
    /**
     * <code>MATCH_NOT_EXISTS_TYPE = 1942;</code>
     *
     * <pre>
     *不存在的比赛小类型
     * </pre>
     */
    MATCH_NOT_EXISTS_TYPE(101, 1942),
    /**
     * <code>MATCH_TYPE_EMPTY = 1943;</code>
     *
     * <pre>
     *服务器未配置比赛类型
     * </pre>
     */
    MATCH_TYPE_EMPTY(102, 1943),
    /**
     * <code>MATCH_NOT_ENOUGH_SCORE = 1944;</code>
     *
     * <pre>
     *幸运豆不足,无法报名
     * </pre>
     */
    MATCH_NOT_ENOUGH_SCORE(103, 1944),
    /**
     * <code>MATCH_ALREADY_BEGIN_CANT_CANCEL = 1945;</code>
     *
     * <pre>
     *比赛已经开始,无法取消报名
     * </pre>
     */
    MATCH_ALREADY_BEGIN_CANT_CANCEL(104, 1945),
    /**
     * <code>ERROR_MATCH_INFO = 1946;</code>
     */
    ERROR_MATCH_INFO(105, 1946),
    /**
     * <code>MATCH_STATUS_NOT_START = 1947;</code>
     */
    MATCH_STATUS_NOT_START(106, 1947),
    /**
     * <code>MATCH_ALREADY_OVER = 1948;</code>
     *
     * <pre>
     *比赛已经结束
     * </pre>
     */
    MATCH_ALREADY_OVER(107, 1948),
    /**
     * <code>MATCH_SIGUP_DUPLICATE = 1949;</code>
     *
     * <pre>
     *你报名的比赛还没开始，请勿重复报名，请耐心等待
     * </pre>
     */
    MATCH_SIGUP_DUPLICATE(108, 1949),
    /**
     * <code>MATCH_SIGUP_USERSOCORE_ERROR = 1950;</code>
     *
     * <pre>
     *查询玩家的信息出错了
     * </pre>
     */
    MATCH_SIGUP_USERSOCORE_ERROR(109, 1950),
    /**
     * <code>MATCH_SIGUP_USERSOCORE_LACK = 1951;</code>
     *
     * <pre>
     *你身上的钱不够无法报名
     * </pre>
     */
    MATCH_SIGUP_USERSOCORE_LACK(110, 1951),
    /**
     * <code>MATCH_SIGUP_EMPTY_SIT = 1952;</code>
     *
     * <pre>
     *当前已经没有玩家能坐下的位置了
     * </pre>
     */
    MATCH_SIGUP_EMPTY_SIT(111, 1952),
    /**
     * <code>MATCH_SIGUP_CREATEMATCH_ERROR = 1953;</code>
     *
     * <pre>
     *创建比赛失败了
     * </pre>
     */
    MATCH_SIGUP_CREATEMATCH_ERROR(112, 1953),
    /**
     * <code>MATCH_NOT_SIGUP_ERROR = 1954;</code>
     *
     * <pre>
     *当前已经没有玩家能坐下的位置了
     * </pre>
     */
    MATCH_NOT_SIGUP_ERROR(113, 1954),
    /**
     * <code>MATCH_NOT_SIGUP_NOT_BENGIN = 1955;</code>
     *
     * <pre>
     *报名的时间还没到
     * </pre>
     */
    MATCH_NOT_SIGUP_NOT_BENGIN(114, 1955),
    /**
     * <code>MATCH_NOT_SIGUP_END_BENGIN = 1956;</code>
     *
     * <pre>
     *报名的时间已经结束了
     * </pre>
     */
    MATCH_NOT_SIGUP_END_BENGIN(115, 1956),
    /**
     * <code>MATCH_NOT_SIGUP_MAINTAIN = 1957;</code>
     *
     * <pre>
     *报名的时间已经结束了
     * </pre>
     */
    MATCH_NOT_SIGUP_MAINTAIN(116, 1957),
    /**
     * <code>MATCH_NO_PRIZEINFO = 1958;</code>
     *
     * <pre>
     *比赛未配置奖励信息
     * </pre>
     */
    MATCH_NO_PRIZEINFO(117, 1958),
    /**
     * <code>MATCH_SIGUP_NOT_EXIST = 1959;</code>
     *
     * <pre>
     *报名的比赛不存在
     * </pre>
     */
    MATCH_SIGUP_NOT_EXIST(118, 1959),
    /**
     * <code>MATCH_BEGIN_DELY = 1960;</code>
     *
     * <pre>
     *比赛开始倒计时中,请参加比赛
     * </pre>
     */
    MATCH_BEGIN_DELY(119, 1960),
    /**
     * <code>MATCH_VIP_LIMIT = 1961;</code>
     */
    MATCH_VIP_LIMIT(120, 1961),
    /**
     * <code>MATCH_LEVEL_LIMIT = 1962;</code>
     */
    MATCH_LEVEL_LIMIT(121, 1962),
    /**
     * <code>MATCH_SCORE_LIMIT = 1963;</code>
     */
    MATCH_SCORE_LIMIT(122, 1963),
    /**
     * <code>NO_SUCHTHING = 204;</code>
     */
    NO_SUCHTHING(123, 204),
    /**
     * <code>CANT_USE = 205;</code>
     */
    CANT_USE(124, 205),
    /**
     * <code>NUM_NOTENOUGH = 206;</code>
     */
    NUM_NOTENOUGH(125, 206),
    /**
     * <code>CANT_SELL = 207;</code>
     */
    CANT_SELL(126, 207),
    /**
     * <code>TODAY_UPPER_LIMIT = 208;</code>
     */
    TODAY_UPPER_LIMIT(127, 208),
    /**
     * <code>NOT_OPEN = 209;</code>
     *
     * <pre>
     *改道具未开启
     * </pre>
     */
    NOT_OPEN(128, 209),
    /**
     * <code>VERSION_TOO_LOW = 210;</code>
     *
     * <pre>
     *版本太低
     * </pre>
     */
    VERSION_TOO_LOW(129, 210),
    /**
     * <code>NOT_ENOUGH_SCORE = 211;</code>
     *
     * <pre>
     *幸运豆不足
     * </pre>
     */
    NOT_ENOUGH_SCORE(130, 211),
    /**
     * <code>CHAT_DISABLE = 222;</code>
     *
     * <pre>
     *聊天禁言
     * </pre>
     */
    CHAT_DISABLE(131, 222),
    /**
     * <code>CHAT_LIMIT_NOT_FOUND = 223;</code>
     *
     * <pre>
     *未找到聊天限制的配置信息chat.csv
     * </pre>
     */
    CHAT_LIMIT_NOT_FOUND(132, 223),
    /**
     * <code>INVITE_USER_BIND = 20001;</code>
     *
     * <pre>
     *您未绑定手机，无法领取奖励
     * </pre>
     */
    INVITE_USER_BIND(133, 20001),
    /**
     * <code>LOGIN_NO_SUCH_ACTIVITY = 30001;</code>
     *
     * <pre>
     *没有此活动
     * </pre>
     */
    LOGIN_NO_SUCH_ACTIVITY(134, 30001),
    /**
     * <code>LOGIN_VIP_LEVEL_LOW = 30002;</code>
     *
     * <pre>
     *vip等级不足
     * </pre>
     */
    LOGIN_VIP_LEVEL_LOW(135, 30002),
    /**
     * <code>LOGIN_VIP_LEVEL_NOTEXSIT = 30003;</code>
     *
     * <pre>
     *不存在该vip级别的奖励
     * </pre>
     */
    LOGIN_VIP_LEVEL_NOTEXSIT(136, 30003),
    /**
     * <code>ACTIVITY_ALREADY_RECVED = 2000;</code>
     */
    ACTIVITY_ALREADY_RECVED(137, 2000),
    /**
     * <code>ACTIVITY_NO_SUCH_ITEM = 2001;</code>
     */
    ACTIVITY_NO_SUCH_ITEM(138, 2001),
    /**
     * <code>ACTIVITY_DISALLOWED = 2002;</code>
     */
    ACTIVITY_DISALLOWED(139, 2002),
    /**
     * <code>GAMETASK_SCORE_ERROR = 3000;</code>
     *
     * <pre>
     * 幸运豆不足
     * </pre>
     */
    GAMETASK_SCORE_ERROR(140, 3000),
    /**
     * <code>GAMETASK_IS_NOT_OVER = 3001;</code>
     *
     * <pre>
     * 任务没完成
     * </pre>
     */
    GAMETASK_IS_NOT_OVER(141, 3001),
    /**
     * <code>GAMETASK_IS_NOT_REF = 3002;</code>
     *
     * <pre>
     *任务刷新次数已经完成
     * </pre>
     */
    GAMETASK_IS_NOT_REF(142, 3002),
    /**
     * <code>GAME_TIAOZHAN_SCORE_LOW = 3010;</code>
     *
     * <pre>
     *挑战赛未达到当前阶段积分
     * </pre>
     */
    GAME_TIAOZHAN_SCORE_LOW(143, 3010),
    /**
     * <code>LOGIN_GET_XCLB = 3011;</code>
     *
     * <pre>
     *获取新春礼包
     * </pre>
     */
    LOGIN_GET_XCLB(144, 3011),
    /**
     * <code>USE_TOO_FREQUENT = 3012;</code>
     *
     * <pre>
     *物品使用过于频繁
     * </pre>
     */
    USE_TOO_FREQUENT(145, 3012),
    /**
     * <code>ITEM_EXPIRE = 3013;</code>
     *
     * <pre>
     *物品已过期
     * </pre>
     */
    ITEM_EXPIRE(146, 3013),
    /**
     * <code>LOGIN_GET_YK = 3014;</code>
     *
     * <pre>
     *获取月卡
     * </pre>
     */
    LOGIN_GET_YK(147, 3014),
    /**
     * <code>ITEM_COMPOSE_CANTCOMPOSE = 3015;</code>
     *
     * <pre>
     *不能参与合成
     * </pre>
     */
    ITEM_COMPOSE_CANTCOMPOSE(148, 3015),
    /**
     * <code>ITEM_COMPOSE_CANTBECOMPOSE = 3016;</code>
     *
     * <pre>
     *不能被合成
     * </pre>
     */
    ITEM_COMPOSE_CANTBECOMPOSE(149, 3016),
    /**
     * <code>USER_DEF_ERROR = 3017;</code>
     *
     * <pre>
     *自定义动态错误内容
     * </pre>
     */
    USER_DEF_ERROR(150, 3017),
    /**
     * <code>MATCH_IN_LEVEL_LOW = 3018;</code>
     *
     * <pre>
     *进入比赛等级过低
     * </pre>
     */
    MATCH_IN_LEVEL_LOW(151, 3018),
    /**
     * <code>MATCH_IN_VIP_LOW = 3019;</code>
     *
     * <pre>
     *进入比赛vip过低
     * </pre>
     */
    MATCH_IN_VIP_LOW(152, 3019),
    /**
     * <code>ARENA_ON = 3100;</code>
     */
    ARENA_ON(153, 3100),
    /**
     * <code>ARENA_COUNT_OVER = 3101;</code>
     */
    ARENA_COUNT_OVER(154, 3101),
    /**
     * <code>ARENA_ITEM_LACK = 3102;</code>
     */
    ARENA_ITEM_LACK(155, 3102),
    /**
     * <code>ARENA_FEE_LACK = 3103;</code>
     */
    ARENA_FEE_LACK(156, 3103),
    /**
     * <code>ARENA_LEVEL_LOW = 3104;</code>
     */
    ARENA_LEVEL_LOW(157, 3104),
    /**
     * <code>ARENA_VIP_LOW = 3105;</code>
     */
    ARENA_VIP_LOW(158, 3105),
    /**
     * <code>ARENA_UNLOCK_ITEM_LOW = 3106;</code>
     */
    ARENA_UNLOCK_ITEM_LOW(159, 3106),
    /**
     * <code>ARENA_LOCK = 3107;</code>
     */
    ARENA_LOCK(160, 3107),
    /**
     * <code>ARENA_TIME_OFF = 3108;</code>
     */
    ARENA_TIME_OFF(161, 3108),
    /**
     * <code>ARENA_ROOM_LACK = 3109;</code>
     *
     * <pre>
     *竞技场房间不足
     * </pre>
     */
    ARENA_ROOM_LACK(162, 3109),
    /**
     * <code>READ_PACK_INVALID = 3200;</code>
     *
     * <pre>
     *1.渠道不符 您使用的红包码无效，请联系客服
     * </pre>
     */
    READ_PACK_INVALID(163, 3200),
    /**
     * <code>READ_PACK_NOT_EXIST = 3201;</code>
     *
     * <pre>
     *2.开始  该红包码不存在，请联系客服
     * </pre>
     */
    READ_PACK_NOT_EXIST(164, 3201),
    /**
     * <code>READ_PACK_NOT_LOSE = 3202;</code>
     *
     * <pre>
     *3.结束  该红包码已失效，请联系客服
     * </pre>
     */
    READ_PACK_NOT_LOSE(165, 3202),
    /**
     * <code>READ_PACK_NOT_AC_REPEAT = 3203;</code>
     *
     * <pre>
     *4.账号超过次数  您的账号已使用过此类红包码
     * </pre>
     */
    READ_PACK_NOT_AC_REPEAT(166, 3203),
    /**
     * <code>READ_PACK_NOT_MAC_REPEAT = 3204;</code>
     *
     * <pre>
     *5.设备超过次数  您的设备已使用过此类红包码
     * </pre>
     */
    READ_PACK_NOT_MAC_REPEAT(167, 3204),
    /**
     * <code>FREE_GOLD_EXCHANGE_NOT_ENOUGH_SCORE = 3205;</code>
     */
    FREE_GOLD_EXCHANGE_NOT_ENOUGH_SCORE(168, 3205),
    /**
     * <code>DISABLED_AFTER_ACCESS_NEW_FREEGOLD = 3206;</code>
     */
    DISABLED_AFTER_ACCESS_NEW_FREEGOLD(169, 3206),
    /**
     * <code>LOGIN_DISABLE_ANONYMOUS = 3207;</code>
     *
     * <pre>
     *LOGINSERVER_REGIST(101),LOGINSERVER_LOGIN_BYPHONE(99)返回的出错码
     *add by ykc,20150423
     * </pre>
     */
    LOGIN_DISABLE_ANONYMOUS(170, 3207),
    /**
     * <code>VERIFYCODE_INVALID = 3208;</code>
     *
     * <pre>
     *验证码无效
     * </pre>
     */
    VERIFYCODE_INVALID(171, 3208),
    /**
     * <code>MOBILE_ALREADY_BIND_OTHER = 3209;</code>
     *
     * <pre>
     *手机号已经被其它人绑定
     * </pre>
     */
    MOBILE_ALREADY_BIND_OTHER(172, 3209),
    /**
     * <code>MOBILE_ALREADY_BIND = 3210;</code>
     *
     * <pre>
     *用户已经绑定过手机号
     * </pre>
     */
    MOBILE_ALREADY_BIND(173, 3210),
    /**
     * <code>MOBILE_NOT_BIND = 3211;</code>
     *
     * <pre>
     *用户尚未绑定手机   
     * </pre>
     */
    MOBILE_NOT_BIND(174, 3211),
    /**
     * <code>MOBILE_INCONSISTENT_BIND = 3212;</code>
     *
     * <pre>
     *和绑定的手机号不一致
     * </pre>
     */
    MOBILE_INCONSISTENT_BIND(175, 3212),
    ;

    /**
     * <code>NETWORK_EROR = -2;</code>
     *
     * <pre>
     *网络错误
     * </pre>
     */
    public static final int NETWORK_EROR_VALUE = -2;
    /**
     * <code>UNKNOW = -1;</code>
     *
     * <pre>
     *未知错误
     * </pre>
     */
    public static final int UNKNOW_VALUE = -1;
    /**
     * <code>SUCCEED = 0;</code>
     *
     * <pre>
     *成功
     * </pre>
     */
    public static final int SUCCEED_VALUE = 0;
    /**
     * <code>SYS_SESSION_EXPIRY = 1;</code>
     *
     * <pre>
     ** 0-100系统消息
     * </pre>
     */
    public static final int SYS_SESSION_EXPIRY_VALUE = 1;
    /**
     * <code>PLAYER_IS_OTHER_LOGIN = 100;</code>
     *
     * <pre>
     ** 101-200个人共同提示消息
     * </pre>
     */
    public static final int PLAYER_IS_OTHER_LOGIN_VALUE = 100;
    /**
     * <code>LOGIN_ACCOUNT_PASSWORD_ERROR = 101;</code>
     *
     * <pre>
     *用户名或密码错误
     * </pre>
     */
    public static final int LOGIN_ACCOUNT_PASSWORD_ERROR_VALUE = 101;
    /**
     * <code>LOGIN_ACCOUNT_NULLITY = 102;</code>
     *
     * <pre>
     *账号冻结
     * </pre>
     */
    public static final int LOGIN_ACCOUNT_NULLITY_VALUE = 102;
    /**
     * <code>LOGIN_BINDING_OTHER_MACHINE = 103;</code>
     *
     * <pre>
     *绑定其它机器
     * </pre>
     */
    public static final int LOGIN_BINDING_OTHER_MACHINE_VALUE = 103;
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGON = 104;</code>
     *
     * <pre>
     *由于系统维护，暂时停止游戏系统的登录服务，请留意网站公告信息！
     * </pre>
     */
    public static final int LOGIN_SYSTEM_ENJOIN_LOGON_VALUE = 104;
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGON_IP = 105;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您所在的 IP 地址的登录功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    public static final int LOGIN_SYSTEM_ENJOIN_LOGON_IP_VALUE = 105;
    /**
     * <code>LOGIN_SYSTEM_ENJOIN_LOGIN_MACHINE = 106;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您的机器的登录功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    public static final int LOGIN_SYSTEM_ENJOIN_LOGIN_MACHINE_VALUE = 106;
    /**
     * <code>REGISTER_SYSTEM_ENJOIN = 107;</code>
     *
     * <pre>
     *注册暂停 提示
     * </pre>
     */
    public static final int REGISTER_SYSTEM_ENJOIN_VALUE = 107;
    /**
     * <code>LOGIN_SYSTEM_ENJOIN = 108;</code>
     *
     * <pre>
     *登陆暂停 提示
     * </pre>
     */
    public static final int LOGIN_SYSTEM_ENJOIN_VALUE = 108;
    /**
     * <code>REGISTER_SYSTEM_FORBID_NAME = 109;</code>
     *
     * <pre>
     *抱歉地通知您，您所输入的登录帐号名含有限制字符串，请更换帐号名后再次申请帐号！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_NAME_VALUE = 109;
    /**
     * <code>REGISTER_SYSTEM_FORBID_NICKNAME = 110;</code>
     *
     * <pre>
     *抱歉地通知您，您所输入的昵称名含有限制字符串，请更换帐号名后再次申请帐号！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_NICKNAME_VALUE = 110;
    /**
     * <code>REGISTER_SYSTEM_FORBID_IP = 111;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您所在的 IP 地址的注册功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_IP_VALUE = 111;
    /**
     * <code>REGISTER_SYSTEM_FORBID_MACHINE = 112;</code>
     *
     * <pre>
     *抱歉地通知您，系统禁止了您的机器的注册功能，请联系客户服务中心了解详细情况！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_MACHINE_VALUE = 112;
    /**
     * <code>REGISTER_SYSTEM_FORBID_ACCOUNTS_REG = 113;</code>
     *
     * <pre>
     *此账号已被注册，请换另一账号尝试再次注册！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_ACCOUNTS_REG_VALUE = 113;
    /**
     * <code>REGISTER_SYSTEM_FORBID_NICKNAME_REG = 114;</code>
     *
     * <pre>
     *此昵称已被注册，请换另一昵称尝试再次注册！
     * </pre>
     */
    public static final int REGISTER_SYSTEM_FORBID_NICKNAME_REG_VALUE = 114;
    /**
     * <code>GAME_SERVER_LOGON = 115;</code>
     *
     * <pre>
     * 你已经在别的房间了 无法登陆此房间
     * </pre>
     */
    public static final int GAME_SERVER_LOGON_VALUE = 115;
    /**
     * <code>GAME_SERVER_ENTERROOM = 116;</code>
     *
     * <pre>
     *登陆房间人数已满
     * </pre>
     */
    public static final int GAME_SERVER_ENTERROOM_VALUE = 116;
    /**
     * <code>GAME_SERVER_ENTERROOMChari = 117;</code>
     *
     * <pre>
     * 椅子位置已被占用
     * </pre>
     */
    public static final int GAME_SERVER_ENTERROOMChari_VALUE = 117;
    /**
     * <code>GAME_SERVER_ENTERROOMCHARITABLE = 118;</code>
     *
     * <pre>
     * 你已经在一个桌子中了 请勿重复 坐下
     * </pre>
     */
    public static final int GAME_SERVER_ENTERROOMCHARITABLE_VALUE = 118;
    /**
     * <code>GAME_SERVER_MACHEGAMEOVER = 119;</code>
     *
     * <pre>
     * 比赛已经结束或者比赛还没开始
     * </pre>
     */
    public static final int GAME_SERVER_MACHEGAMEOVER_VALUE = 119;
    /**
     * <code>GAME_SERVER_ISNOTSINGUP = 120;</code>
     *
     * <pre>
     * 你没有报名不能参加比赛
     * </pre>
     */
    public static final int GAME_SERVER_ISNOTSINGUP_VALUE = 120;
    /**
     * <code>SAVE_MONEY_ENJOININSURE = 130;</code>
     *
     * <pre>
     *系统禁止了您所在的 IP 地址的游戏服务权限
     * </pre>
     */
    public static final int SAVE_MONEY_ENJOININSURE_VALUE = 130;
    /**
     * <code>SAVE_MONEY_ENJOINLOGIN = 131;</code>
     *
     * <pre>
     *系统禁止了您的机器的游戏服务权限
     * </pre>
     */
    public static final int SAVE_MONEY_ENJOINLOGIN_VALUE = 131;
    /**
     * <code>SAVE_MONEY_NOTHISUSER = 132;</code>
     *
     * <pre>
     *您的帐号不存在或者密码输入有误
     * </pre>
     */
    public static final int SAVE_MONEY_NOTHISUSER_VALUE = 132;
    /**
     * <code>SAVE_MONEY_NULLITY = 133;</code>
     *
     * <pre>
     *您的帐号暂时处于冻结状态
     * </pre>
     */
    public static final int SAVE_MONEY_NULLITY_VALUE = 133;
    /**
     * <code>SAVE_MONEY_STUNDOWN = 134;</code>
     *
     * <pre>
     *您的帐号使用了安全关闭功能
     * </pre>
     */
    public static final int SAVE_MONEY_STUNDOWN_VALUE = 134;
    /**
     * <code>SAVE_MONEY_MOORMACHINE = 135;</code>
     *
     * <pre>
     *您的帐号使用固定机器登录功能
     * </pre>
     */
    public static final int SAVE_MONEY_MOORMACHINE_VALUE = 135;
    /**
     * <code>SAVE_MONEY_LESSMONEY = 136;</code>
     *
     * <pre>
     *存入保险柜的游戏币数目过少
     * </pre>
     */
    public static final int SAVE_MONEY_LESSMONEY_VALUE = 136;
    /**
     * <code>SAVE_MONEY_LESSGAMEMONEY = 137;</code>
     *
     * <pre>
     *您当前游戏币的可用余额不足，游戏币存入失败
     * </pre>
     */
    public static final int SAVE_MONEY_LESSGAMEMONEY_VALUE = 137;
    /**
     * <code>SAVE_MONEY_INGAME = 138;</code>
     *
     * <pre>
     *您正在游戏中
     * </pre>
     */
    public static final int SAVE_MONEY_INGAME_VALUE = 138;
    /**
     * <code>SAVE_MONEY_BADPWD = 139;</code>
     *
     * <pre>
     *您的保险柜密码不正确或者输入有误，请查证后再次尝试！
     * </pre>
     */
    public static final int SAVE_MONEY_BADPWD_VALUE = 139;
    /**
     * <code>CHANGE_MONEY_LESSMONEY = 140;</code>
     *
     * <pre>
     *兑换的金币数目过少
     * </pre>
     */
    public static final int CHANGE_MONEY_LESSMONEY_VALUE = 140;
    /**
     * <code>CHANGE_MONEY_NOTMONEY = 141;</code>
     *
     * <pre>
     *用户金币数目没有或者兑换数目超过了拥有的金币数
     * </pre>
     */
    public static final int CHANGE_MONEY_NOTMONEY_VALUE = 141;
    /**
     * <code>GET_USERINFO_NOUSER = 142;</code>
     *
     * <pre>
     *该用户不存在
     * </pre>
     */
    public static final int GET_USERINFO_NOUSER_VALUE = 142;
    /**
     * <code>GET_USERINFO_FORBIDNICKMAE = 143;</code>
     *
     * <pre>
     *您所输入的游戏昵称名含有限制字符串，请更换昵称名后再次修改！
     * </pre>
     */
    public static final int GET_USERINFO_FORBIDNICKMAE_VALUE = 143;
    /**
     * <code>GET_USERINFO_INUSERNICKNAME = 144;</code>
     *
     * <pre>
     *此昵称已被其他玩家使用了，请更换昵称名后再次修改！
     * </pre>
     */
    public static final int GET_USERINFO_INUSERNICKNAME_VALUE = 144;
    /**
     * <code>GET_USERINFO_NULLNICKNAME = 145;</code>
     *
     * <pre>
     *昵称不能为空
     * </pre>
     */
    public static final int GET_USERINFO_NULLNICKNAME_VALUE = 145;
    /**
     * <code>UPDATE_LOGINPWD_NOTINPWD = 146;</code>
     *
     * <pre>
     *新帐号密码为空，不允许设置密码为空，请查证后再次尝试！
     * </pre>
     */
    public static final int UPDATE_LOGINPWD_NOTINPWD_VALUE = 146;
    /**
     * <code>SAVEORTAKE_MONEY_ERROR = 147;</code>
     *
     * <pre>
     *存入或者取出幸运豆数量不能为空
     * </pre>
     */
    public static final int SAVEORTAKE_MONEY_ERROR_VALUE = 147;
    /**
     * <code>TAKE_MONEY_NOCODE = 148;</code>
     *
     * <pre>
     *取出幸运豆是，请输入保险柜密码
     * </pre>
     */
    public static final int TAKE_MONEY_NOCODE_VALUE = 148;
    /**
     * <code>UPDATE_PWD_NOPWD = 149;</code>
     *
     * <pre>
     *原始密码不能为空
     * </pre>
     */
    public static final int UPDATE_PWD_NOPWD_VALUE = 149;
    /**
     * <code>SAVE_MONEY_NOTENOUGHMONEY = 150;</code>
     *
     * <pre>
     *您的保险柜余额不足
     * </pre>
     */
    public static final int SAVE_MONEY_NOTENOUGHMONEY_VALUE = 150;
    /**
     * <code>MONEY_NOT_ENOUGH = 151;</code>
     *
     * <pre>
     *你身上带的钱不足，不能进入房间
     * </pre>
     */
    public static final int MONEY_NOT_ENOUGH_VALUE = 151;
    /**
     * <code>ROOM_FULL = 152;</code>
     *
     * <pre>
     * 人数已满
     * </pre>
     */
    public static final int ROOM_FULL_VALUE = 152;
    /**
     * <code>SING_UP_MAX = 153;</code>
     *
     * <pre>
     * 最大人报名次数限制
     * </pre>
     */
    public static final int SING_UP_MAX_VALUE = 153;
    /**
     * <code>SING_NOT_UP = 154;</code>
     *
     * <pre>
     *  比赛开始不能退出比赛
     * </pre>
     */
    public static final int SING_NOT_UP_VALUE = 154;
    /**
     * <code>USER_LOCK_MACHINE = 155;</code>
     *
     * <pre>
     *锁定本家失败密码输入有误
     * </pre>
     */
    public static final int USER_LOCK_MACHINE_VALUE = 155;
    /**
     * <code>PROP_CHANGE_LESS = 156;</code>
     *
     * <pre>
     *兑换的道具大于自己拥有的。
     * </pre>
     */
    public static final int PROP_CHANGE_LESS_VALUE = 156;
    /**
     * <code>USER_LOGIN_OTHER = 157;</code>
     *
     * <pre>
     *兑换的道具大于自己拥有的。
     * </pre>
     */
    public static final int USER_LOGIN_OTHER_VALUE = 157;
    /**
     * <code>LOGIN_ACCOUNT_ERROR = 158;</code>
     *
     * <pre>
     *用户名不存在
     * </pre>
     */
    public static final int LOGIN_ACCOUNT_ERROR_VALUE = 158;
    /**
     * <code>LOGIN_PASSWORD_ERROR = 159;</code>
     *
     * <pre>
     *密码错误
     * </pre>
     */
    public static final int LOGIN_PASSWORD_ERROR_VALUE = 159;
    /**
     * <code>LOGIN_NOTFIND_GIFT = 160;</code>
     *
     * <pre>
     * 没找到对应的道具
     * </pre>
     */
    public static final int LOGIN_NOTFIND_GIFT_VALUE = 160;
    /**
     * <code>LOGIN_USERSCORE_ERROR = 161;</code>
     *
     * <pre>
     * 用户财富信息出错
     * </pre>
     */
    public static final int LOGIN_USERSCORE_ERROR_VALUE = 161;
    /**
     * <code>LOGIN_USERSCORE_NOTENOUGH = 162;</code>
     *
     * <pre>
     *用户钱财不足
     * </pre>
     */
    public static final int LOGIN_USERSCORE_NOTENOUGH_VALUE = 162;
    /**
     * <code>LOGIN_UPDATE_DATE_ERROR = 163;</code>
     *
     * <pre>
     * 更新数据出错了
     * </pre>
     */
    public static final int LOGIN_UPDATE_DATE_ERROR_VALUE = 163;
    /**
     * <code>LOGIN_BANK_PASWD_ERROR = 164;</code>
     *
     * <pre>
     * 保险柜密码错误
     * </pre>
     */
    public static final int LOGIN_BANK_PASWD_ERROR_VALUE = 164;
    /**
     * <code>LOGIN_GIVE_ROSE_NO_ZERO = 165;</code>
     *
     * <pre>
     *赠送的数量不能为0
     * </pre>
     */
    public static final int LOGIN_GIVE_ROSE_NO_ZERO_VALUE = 165;
    /**
     * <code>LOGIN_GIVE_ROSE_TO_ME = 166;</code>
     *
     * <pre>
     * 不能自己赠送给自己
     * </pre>
     */
    public static final int LOGIN_GIVE_ROSE_TO_ME_VALUE = 166;
    /**
     * <code>LOGIN_IP_COUNT = 167;</code>
     *
     * <pre>
     * 你注册使用的ip 数已经达到最大上限
     * </pre>
     */
    public static final int LOGIN_IP_COUNT_VALUE = 167;
    /**
     * <code>LOGIN_MAC_COUNT = 168;</code>
     *
     * <pre>
     * 你所使用的机器码  今天已经达到了最大上限
     * </pre>
     */
    public static final int LOGIN_MAC_COUNT_VALUE = 168;
    /**
     * <code>INVITE_USER_SCORE = 169;</code>
     *
     * <pre>
     *邀请用户领取幸运豆失败
     * </pre>
     */
    public static final int INVITE_USER_SCORE_VALUE = 169;
    /**
     * <code>USER_INVITED_SCORE = 170;</code>
     *
     * <pre>
     *已经被邀请过不能重复领取奖励
     * </pre>
     */
    public static final int USER_INVITED_SCORE_VALUE = 170;
    /**
     * <code>RADPACKETCODING_ERR = 171;</code>
     *
     * <pre>
     *红包兑换码错误
     * </pre>
     */
    public static final int RADPACKETCODING_ERR_VALUE = 171;
    /**
     * <code>RADPACKETCODING_USED = 172;</code>
     *
     * <pre>
     *红包码使用过
     * </pre>
     */
    public static final int RADPACKETCODING_USED_VALUE = 172;
    /**
     * <code>USER_INVITED_USERSELF = 173;</code>
     *
     * <pre>
     *用户不能自己邀请自己
     * </pre>
     */
    public static final int USER_INVITED_USERSELF_VALUE = 173;
    /**
     * <code>USER_INVITED_NOEXIST = 174;</code>
     *
     * <pre>
     *邀请码错误
     * </pre>
     */
    public static final int USER_INVITED_NOEXIST_VALUE = 174;
    /**
     * <code>RADPACKETCODING_ERROE = 175;</code>
     *
     * <pre>
     *红包兑换码生成错误
     * </pre>
     */
    public static final int RADPACKETCODING_ERROE_VALUE = 175;
    /**
     * <code>LOGIN_MAC_EVER_COUNT = 176;</code>
     *
     * <pre>
     * 你所使用的机器码  已经达到了最大上限
     * </pre>
     */
    public static final int LOGIN_MAC_EVER_COUNT_VALUE = 176;
    /**
     * <code>LOGIN_EVENT_NOTBEGIN = 177;</code>
     *
     * <pre>
     * 活动还未开始
     * </pre>
     */
    public static final int LOGIN_EVENT_NOTBEGIN_VALUE = 177;
    /**
     * <code>LOGIN_EVENT_FINISHED = 178;</code>
     *
     * <pre>
     *活动已经结束
     * </pre>
     */
    public static final int LOGIN_EVENT_FINISHED_VALUE = 178;
    /**
     * <code>LOGIN_EVENT_ZZ_NOTENOUGH = 179;</code>
     *
     * <pre>
     * 你的粽子不够了
     * </pre>
     */
    public static final int LOGIN_EVENT_ZZ_NOTENOUGH_VALUE = 179;
    /**
     * <code>RADPACKETCODING_RECEIVED = 180;</code>
     *
     * <pre>
     *您已经领取过新手礼包，请勿重新使用！
     * </pre>
     */
    public static final int RADPACKETCODING_RECEIVED_VALUE = 180;
    /**
     * <code>GAME_RANK_NOT_IN_RANK = 181;</code>
     *
     * <pre>
     *未进入排名，无法领奖
     * </pre>
     */
    public static final int GAME_RANK_NOT_IN_RANK_VALUE = 181;
    /**
     * <code>GAME_RANK_RANK_AWARD_RECVED = 182;</code>
     *
     * <pre>
     *排名奖励已经领取过
     * </pre>
     */
    public static final int GAME_RANK_RANK_AWARD_RECVED_VALUE = 182;
    /**
     * <code>GAME_RANK_THUMB_DONE = 183;</code>
     *
     * <pre>
     *不能重复点赞
     * </pre>
     */
    public static final int GAME_RANK_THUMB_DONE_VALUE = 183;
    /**
     * <code>GAME_RANK_THUMB_REACH_MAX = 184;</code>
     *
     * <pre>
     *此榜单当日点赞次数已达最大值
     * </pre>
     */
    public static final int GAME_RANK_THUMB_REACH_MAX_VALUE = 184;
    /**
     * <code>GAME_ONLINE_TIME_LOW = 185;</code>
     *
     * <pre>
     *领取在线奖励的时间不到
     * </pre>
     */
    public static final int GAME_ONLINE_TIME_LOW_VALUE = 185;
    /**
     * <code>GAME_ONLINE_RECEIVE = 186;</code>
     *
     * <pre>
     *你已经领取过奖励了
     * </pre>
     */
    public static final int GAME_ONLINE_RECEIVE_VALUE = 186;
    /**
     * <code>GAME_RANK_SAVING = 187;</code>
     *
     * <pre>
     *排行榜单生成中
     * </pre>
     */
    public static final int GAME_RANK_SAVING_VALUE = 187;
    /**
     * <code>LOGIN_VERIFY_FAILED = 188;</code>
     *
     * <pre>
     *手机验证失败
     * </pre>
     */
    public static final int LOGIN_VERIFY_FAILED_VALUE = 188;
    /**
     * <code>QIAN_DAO_TODAY_SIGNED = 189;</code>
     */
    public static final int QIAN_DAO_TODAY_SIGNED_VALUE = 189;
    /**
     * <code>QIAN_DAO_RECV_DISABLE = 190;</code>
     */
    public static final int QIAN_DAO_RECV_DISABLE_VALUE = 190;
    /**
     * <code>QIAN_DAO_RECV_DONE = 191;</code>
     */
    public static final int QIAN_DAO_RECV_DONE_VALUE = 191;
    /**
     * <code>RANK_TODAY_CACHE_EMPTY = 192;</code>
     */
    public static final int RANK_TODAY_CACHE_EMPTY_VALUE = 192;
    /**
     * <code>RANK_YESTERDAY_CACHE_EMPTY = 193;</code>
     */
    public static final int RANK_YESTERDAY_CACHE_EMPTY_VALUE = 193;
    /**
     * <code>LOGIN_PASSWD_LENGTH_ERR = 194;</code>
     */
    public static final int LOGIN_PASSWD_LENGTH_ERR_VALUE = 194;
    /**
     * <code>LOGIN_PHONE_FORMAT_ERR = 195;</code>
     */
    public static final int LOGIN_PHONE_FORMAT_ERR_VALUE = 195;
    /**
     * <code>LOGIN_VERIFYCODE_TOOFREQUENT = 196;</code>
     */
    public static final int LOGIN_VERIFYCODE_TOOFREQUENT_VALUE = 196;
    /**
     * <code>LOGIN_USEITEM_LEVEL_NOTENOUGH = 197;</code>
     */
    public static final int LOGIN_USEITEM_LEVEL_NOTENOUGH_VALUE = 197;
    /**
     * <code>LOGIN_USEPACK_INROOM = 198;</code>
     */
    public static final int LOGIN_USEPACK_INROOM_VALUE = 198;
    /**
     * <code>LOGIN_USERPACK_FULL = 199;</code>
     */
    public static final int LOGIN_USERPACK_FULL_VALUE = 199;
    /**
     * <code>LOGIN_USER_ALREADY_GETPRIZE = 200;</code>
     */
    public static final int LOGIN_USER_ALREADY_GETPRIZE_VALUE = 200;
    /**
     * <code>LOGIN_USER_NOFESTIVAL = 201;</code>
     */
    public static final int LOGIN_USER_NOFESTIVAL_VALUE = 201;
    /**
     * <code>LOGIN_MUSTBEPOSITIVE = 202;</code>
     */
    public static final int LOGIN_MUSTBEPOSITIVE_VALUE = 202;
    /**
     * <code>GAME_RANK_THUMB_TO_SELF = 203;</code>
     *
     * <pre>
     *游戏排行榜,不能对自己点赞
     * </pre>
     */
    public static final int GAME_RANK_THUMB_TO_SELF_VALUE = 203;
    /**
     * <code>MATCH_YI_BAO_MING = 1940;</code>
     *
     * <pre>
     *您已经报名此场比赛
     * </pre>
     */
    public static final int MATCH_YI_BAO_MING_VALUE = 1940;
    /**
     * <code>MATCH_WEI_BAO_MING = 1941;</code>
     *
     * <pre>
     *您未报名此场比赛
     * </pre>
     */
    public static final int MATCH_WEI_BAO_MING_VALUE = 1941;
    /**
     * <code>MATCH_NOT_EXISTS_TYPE = 1942;</code>
     *
     * <pre>
     *不存在的比赛小类型
     * </pre>
     */
    public static final int MATCH_NOT_EXISTS_TYPE_VALUE = 1942;
    /**
     * <code>MATCH_TYPE_EMPTY = 1943;</code>
     *
     * <pre>
     *服务器未配置比赛类型
     * </pre>
     */
    public static final int MATCH_TYPE_EMPTY_VALUE = 1943;
    /**
     * <code>MATCH_NOT_ENOUGH_SCORE = 1944;</code>
     *
     * <pre>
     *幸运豆不足,无法报名
     * </pre>
     */
    public static final int MATCH_NOT_ENOUGH_SCORE_VALUE = 1944;
    /**
     * <code>MATCH_ALREADY_BEGIN_CANT_CANCEL = 1945;</code>
     *
     * <pre>
     *比赛已经开始,无法取消报名
     * </pre>
     */
    public static final int MATCH_ALREADY_BEGIN_CANT_CANCEL_VALUE = 1945;
    /**
     * <code>ERROR_MATCH_INFO = 1946;</code>
     */
    public static final int ERROR_MATCH_INFO_VALUE = 1946;
    /**
     * <code>MATCH_STATUS_NOT_START = 1947;</code>
     */
    public static final int MATCH_STATUS_NOT_START_VALUE = 1947;
    /**
     * <code>MATCH_ALREADY_OVER = 1948;</code>
     *
     * <pre>
     *比赛已经结束
     * </pre>
     */
    public static final int MATCH_ALREADY_OVER_VALUE = 1948;
    /**
     * <code>MATCH_SIGUP_DUPLICATE = 1949;</code>
     *
     * <pre>
     *你报名的比赛还没开始，请勿重复报名，请耐心等待
     * </pre>
     */
    public static final int MATCH_SIGUP_DUPLICATE_VALUE = 1949;
    /**
     * <code>MATCH_SIGUP_USERSOCORE_ERROR = 1950;</code>
     *
     * <pre>
     *查询玩家的信息出错了
     * </pre>
     */
    public static final int MATCH_SIGUP_USERSOCORE_ERROR_VALUE = 1950;
    /**
     * <code>MATCH_SIGUP_USERSOCORE_LACK = 1951;</code>
     *
     * <pre>
     *你身上的钱不够无法报名
     * </pre>
     */
    public static final int MATCH_SIGUP_USERSOCORE_LACK_VALUE = 1951;
    /**
     * <code>MATCH_SIGUP_EMPTY_SIT = 1952;</code>
     *
     * <pre>
     *当前已经没有玩家能坐下的位置了
     * </pre>
     */
    public static final int MATCH_SIGUP_EMPTY_SIT_VALUE = 1952;
    /**
     * <code>MATCH_SIGUP_CREATEMATCH_ERROR = 1953;</code>
     *
     * <pre>
     *创建比赛失败了
     * </pre>
     */
    public static final int MATCH_SIGUP_CREATEMATCH_ERROR_VALUE = 1953;
    /**
     * <code>MATCH_NOT_SIGUP_ERROR = 1954;</code>
     *
     * <pre>
     *当前已经没有玩家能坐下的位置了
     * </pre>
     */
    public static final int MATCH_NOT_SIGUP_ERROR_VALUE = 1954;
    /**
     * <code>MATCH_NOT_SIGUP_NOT_BENGIN = 1955;</code>
     *
     * <pre>
     *报名的时间还没到
     * </pre>
     */
    public static final int MATCH_NOT_SIGUP_NOT_BENGIN_VALUE = 1955;
    /**
     * <code>MATCH_NOT_SIGUP_END_BENGIN = 1956;</code>
     *
     * <pre>
     *报名的时间已经结束了
     * </pre>
     */
    public static final int MATCH_NOT_SIGUP_END_BENGIN_VALUE = 1956;
    /**
     * <code>MATCH_NOT_SIGUP_MAINTAIN = 1957;</code>
     *
     * <pre>
     *报名的时间已经结束了
     * </pre>
     */
    public static final int MATCH_NOT_SIGUP_MAINTAIN_VALUE = 1957;
    /**
     * <code>MATCH_NO_PRIZEINFO = 1958;</code>
     *
     * <pre>
     *比赛未配置奖励信息
     * </pre>
     */
    public static final int MATCH_NO_PRIZEINFO_VALUE = 1958;
    /**
     * <code>MATCH_SIGUP_NOT_EXIST = 1959;</code>
     *
     * <pre>
     *报名的比赛不存在
     * </pre>
     */
    public static final int MATCH_SIGUP_NOT_EXIST_VALUE = 1959;
    /**
     * <code>MATCH_BEGIN_DELY = 1960;</code>
     *
     * <pre>
     *比赛开始倒计时中,请参加比赛
     * </pre>
     */
    public static final int MATCH_BEGIN_DELY_VALUE = 1960;
    /**
     * <code>MATCH_VIP_LIMIT = 1961;</code>
     */
    public static final int MATCH_VIP_LIMIT_VALUE = 1961;
    /**
     * <code>MATCH_LEVEL_LIMIT = 1962;</code>
     */
    public static final int MATCH_LEVEL_LIMIT_VALUE = 1962;
    /**
     * <code>MATCH_SCORE_LIMIT = 1963;</code>
     */
    public static final int MATCH_SCORE_LIMIT_VALUE = 1963;
    /**
     * <code>NO_SUCHTHING = 204;</code>
     */
    public static final int NO_SUCHTHING_VALUE = 204;
    /**
     * <code>CANT_USE = 205;</code>
     */
    public static final int CANT_USE_VALUE = 205;
    /**
     * <code>NUM_NOTENOUGH = 206;</code>
     */
    public static final int NUM_NOTENOUGH_VALUE = 206;
    /**
     * <code>CANT_SELL = 207;</code>
     */
    public static final int CANT_SELL_VALUE = 207;
    /**
     * <code>TODAY_UPPER_LIMIT = 208;</code>
     */
    public static final int TODAY_UPPER_LIMIT_VALUE = 208;
    /**
     * <code>NOT_OPEN = 209;</code>
     *
     * <pre>
     *改道具未开启
     * </pre>
     */
    public static final int NOT_OPEN_VALUE = 209;
    /**
     * <code>VERSION_TOO_LOW = 210;</code>
     *
     * <pre>
     *版本太低
     * </pre>
     */
    public static final int VERSION_TOO_LOW_VALUE = 210;
    /**
     * <code>NOT_ENOUGH_SCORE = 211;</code>
     *
     * <pre>
     *幸运豆不足
     * </pre>
     */
    public static final int NOT_ENOUGH_SCORE_VALUE = 211;
    /**
     * <code>CHAT_DISABLE = 222;</code>
     *
     * <pre>
     *聊天禁言
     * </pre>
     */
    public static final int CHAT_DISABLE_VALUE = 222;
    /**
     * <code>CHAT_LIMIT_NOT_FOUND = 223;</code>
     *
     * <pre>
     *未找到聊天限制的配置信息chat.csv
     * </pre>
     */
    public static final int CHAT_LIMIT_NOT_FOUND_VALUE = 223;
    /**
     * <code>INVITE_USER_BIND = 20001;</code>
     *
     * <pre>
     *您未绑定手机，无法领取奖励
     * </pre>
     */
    public static final int INVITE_USER_BIND_VALUE = 20001;
    /**
     * <code>LOGIN_NO_SUCH_ACTIVITY = 30001;</code>
     *
     * <pre>
     *没有此活动
     * </pre>
     */
    public static final int LOGIN_NO_SUCH_ACTIVITY_VALUE = 30001;
    /**
     * <code>LOGIN_VIP_LEVEL_LOW = 30002;</code>
     *
     * <pre>
     *vip等级不足
     * </pre>
     */
    public static final int LOGIN_VIP_LEVEL_LOW_VALUE = 30002;
    /**
     * <code>LOGIN_VIP_LEVEL_NOTEXSIT = 30003;</code>
     *
     * <pre>
     *不存在该vip级别的奖励
     * </pre>
     */
    public static final int LOGIN_VIP_LEVEL_NOTEXSIT_VALUE = 30003;
    /**
     * <code>ACTIVITY_ALREADY_RECVED = 2000;</code>
     */
    public static final int ACTIVITY_ALREADY_RECVED_VALUE = 2000;
    /**
     * <code>ACTIVITY_NO_SUCH_ITEM = 2001;</code>
     */
    public static final int ACTIVITY_NO_SUCH_ITEM_VALUE = 2001;
    /**
     * <code>ACTIVITY_DISALLOWED = 2002;</code>
     */
    public static final int ACTIVITY_DISALLOWED_VALUE = 2002;
    /**
     * <code>GAMETASK_SCORE_ERROR = 3000;</code>
     *
     * <pre>
     * 幸运豆不足
     * </pre>
     */
    public static final int GAMETASK_SCORE_ERROR_VALUE = 3000;
    /**
     * <code>GAMETASK_IS_NOT_OVER = 3001;</code>
     *
     * <pre>
     * 任务没完成
     * </pre>
     */
    public static final int GAMETASK_IS_NOT_OVER_VALUE = 3001;
    /**
     * <code>GAMETASK_IS_NOT_REF = 3002;</code>
     *
     * <pre>
     *任务刷新次数已经完成
     * </pre>
     */
    public static final int GAMETASK_IS_NOT_REF_VALUE = 3002;
    /**
     * <code>GAME_TIAOZHAN_SCORE_LOW = 3010;</code>
     *
     * <pre>
     *挑战赛未达到当前阶段积分
     * </pre>
     */
    public static final int GAME_TIAOZHAN_SCORE_LOW_VALUE = 3010;
    /**
     * <code>LOGIN_GET_XCLB = 3011;</code>
     *
     * <pre>
     *获取新春礼包
     * </pre>
     */
    public static final int LOGIN_GET_XCLB_VALUE = 3011;
    /**
     * <code>USE_TOO_FREQUENT = 3012;</code>
     *
     * <pre>
     *物品使用过于频繁
     * </pre>
     */
    public static final int USE_TOO_FREQUENT_VALUE = 3012;
    /**
     * <code>ITEM_EXPIRE = 3013;</code>
     *
     * <pre>
     *物品已过期
     * </pre>
     */
    public static final int ITEM_EXPIRE_VALUE = 3013;
    /**
     * <code>LOGIN_GET_YK = 3014;</code>
     *
     * <pre>
     *获取月卡
     * </pre>
     */
    public static final int LOGIN_GET_YK_VALUE = 3014;
    /**
     * <code>ITEM_COMPOSE_CANTCOMPOSE = 3015;</code>
     *
     * <pre>
     *不能参与合成
     * </pre>
     */
    public static final int ITEM_COMPOSE_CANTCOMPOSE_VALUE = 3015;
    /**
     * <code>ITEM_COMPOSE_CANTBECOMPOSE = 3016;</code>
     *
     * <pre>
     *不能被合成
     * </pre>
     */
    public static final int ITEM_COMPOSE_CANTBECOMPOSE_VALUE = 3016;
    /**
     * <code>USER_DEF_ERROR = 3017;</code>
     *
     * <pre>
     *自定义动态错误内容
     * </pre>
     */
    public static final int USER_DEF_ERROR_VALUE = 3017;
    /**
     * <code>MATCH_IN_LEVEL_LOW = 3018;</code>
     *
     * <pre>
     *进入比赛等级过低
     * </pre>
     */
    public static final int MATCH_IN_LEVEL_LOW_VALUE = 3018;
    /**
     * <code>MATCH_IN_VIP_LOW = 3019;</code>
     *
     * <pre>
     *进入比赛vip过低
     * </pre>
     */
    public static final int MATCH_IN_VIP_LOW_VALUE = 3019;
    /**
     * <code>ARENA_ON = 3100;</code>
     */
    public static final int ARENA_ON_VALUE = 3100;
    /**
     * <code>ARENA_COUNT_OVER = 3101;</code>
     */
    public static final int ARENA_COUNT_OVER_VALUE = 3101;
    /**
     * <code>ARENA_ITEM_LACK = 3102;</code>
     */
    public static final int ARENA_ITEM_LACK_VALUE = 3102;
    /**
     * <code>ARENA_FEE_LACK = 3103;</code>
     */
    public static final int ARENA_FEE_LACK_VALUE = 3103;
    /**
     * <code>ARENA_LEVEL_LOW = 3104;</code>
     */
    public static final int ARENA_LEVEL_LOW_VALUE = 3104;
    /**
     * <code>ARENA_VIP_LOW = 3105;</code>
     */
    public static final int ARENA_VIP_LOW_VALUE = 3105;
    /**
     * <code>ARENA_UNLOCK_ITEM_LOW = 3106;</code>
     */
    public static final int ARENA_UNLOCK_ITEM_LOW_VALUE = 3106;
    /**
     * <code>ARENA_LOCK = 3107;</code>
     */
    public static final int ARENA_LOCK_VALUE = 3107;
    /**
     * <code>ARENA_TIME_OFF = 3108;</code>
     */
    public static final int ARENA_TIME_OFF_VALUE = 3108;
    /**
     * <code>ARENA_ROOM_LACK = 3109;</code>
     *
     * <pre>
     *竞技场房间不足
     * </pre>
     */
    public static final int ARENA_ROOM_LACK_VALUE = 3109;
    /**
     * <code>READ_PACK_INVALID = 3200;</code>
     *
     * <pre>
     *1.渠道不符 您使用的红包码无效，请联系客服
     * </pre>
     */
    public static final int READ_PACK_INVALID_VALUE = 3200;
    /**
     * <code>READ_PACK_NOT_EXIST = 3201;</code>
     *
     * <pre>
     *2.开始  该红包码不存在，请联系客服
     * </pre>
     */
    public static final int READ_PACK_NOT_EXIST_VALUE = 3201;
    /**
     * <code>READ_PACK_NOT_LOSE = 3202;</code>
     *
     * <pre>
     *3.结束  该红包码已失效，请联系客服
     * </pre>
     */
    public static final int READ_PACK_NOT_LOSE_VALUE = 3202;
    /**
     * <code>READ_PACK_NOT_AC_REPEAT = 3203;</code>
     *
     * <pre>
     *4.账号超过次数  您的账号已使用过此类红包码
     * </pre>
     */
    public static final int READ_PACK_NOT_AC_REPEAT_VALUE = 3203;
    /**
     * <code>READ_PACK_NOT_MAC_REPEAT = 3204;</code>
     *
     * <pre>
     *5.设备超过次数  您的设备已使用过此类红包码
     * </pre>
     */
    public static final int READ_PACK_NOT_MAC_REPEAT_VALUE = 3204;
    /**
     * <code>FREE_GOLD_EXCHANGE_NOT_ENOUGH_SCORE = 3205;</code>
     */
    public static final int FREE_GOLD_EXCHANGE_NOT_ENOUGH_SCORE_VALUE = 3205;
    /**
     * <code>DISABLED_AFTER_ACCESS_NEW_FREEGOLD = 3206;</code>
     */
    public static final int DISABLED_AFTER_ACCESS_NEW_FREEGOLD_VALUE = 3206;
    /**
     * <code>LOGIN_DISABLE_ANONYMOUS = 3207;</code>
     *
     * <pre>
     *LOGINSERVER_REGIST(101),LOGINSERVER_LOGIN_BYPHONE(99)返回的出错码
     *add by ykc,20150423
     * </pre>
     */
    public static final int LOGIN_DISABLE_ANONYMOUS_VALUE = 3207;
    /**
     * <code>VERIFYCODE_INVALID = 3208;</code>
     *
     * <pre>
     *验证码无效
     * </pre>
     */
    public static final int VERIFYCODE_INVALID_VALUE = 3208;
    /**
     * <code>MOBILE_ALREADY_BIND_OTHER = 3209;</code>
     *
     * <pre>
     *手机号已经被其它人绑定
     * </pre>
     */
    public static final int MOBILE_ALREADY_BIND_OTHER_VALUE = 3209;
    /**
     * <code>MOBILE_ALREADY_BIND = 3210;</code>
     *
     * <pre>
     *用户已经绑定过手机号
     * </pre>
     */
    public static final int MOBILE_ALREADY_BIND_VALUE = 3210;
    /**
     * <code>MOBILE_NOT_BIND = 3211;</code>
     *
     * <pre>
     *用户尚未绑定手机   
     * </pre>
     */
    public static final int MOBILE_NOT_BIND_VALUE = 3211;
    /**
     * <code>MOBILE_INCONSISTENT_BIND = 3212;</code>
     *
     * <pre>
     *和绑定的手机号不一致
     * </pre>
     */
    public static final int MOBILE_INCONSISTENT_BIND_VALUE = 3212;


    public final int getNumber() { return value; }

    public static ErrorCode valueOf(int value) {
      switch (value) {
        case -2: return NETWORK_EROR;
        case -1: return UNKNOW;
        case 0: return SUCCEED;
        case 1: return SYS_SESSION_EXPIRY;
        case 100: return PLAYER_IS_OTHER_LOGIN;
        case 101: return LOGIN_ACCOUNT_PASSWORD_ERROR;
        case 102: return LOGIN_ACCOUNT_NULLITY;
        case 103: return LOGIN_BINDING_OTHER_MACHINE;
        case 104: return LOGIN_SYSTEM_ENJOIN_LOGON;
        case 105: return LOGIN_SYSTEM_ENJOIN_LOGON_IP;
        case 106: return LOGIN_SYSTEM_ENJOIN_LOGIN_MACHINE;
        case 107: return REGISTER_SYSTEM_ENJOIN;
        case 108: return LOGIN_SYSTEM_ENJOIN;
        case 109: return REGISTER_SYSTEM_FORBID_NAME;
        case 110: return REGISTER_SYSTEM_FORBID_NICKNAME;
        case 111: return REGISTER_SYSTEM_FORBID_IP;
        case 112: return REGISTER_SYSTEM_FORBID_MACHINE;
        case 113: return REGISTER_SYSTEM_FORBID_ACCOUNTS_REG;
        case 114: return REGISTER_SYSTEM_FORBID_NICKNAME_REG;
        case 115: return GAME_SERVER_LOGON;
        case 116: return GAME_SERVER_ENTERROOM;
        case 117: return GAME_SERVER_ENTERROOMChari;
        case 118: return GAME_SERVER_ENTERROOMCHARITABLE;
        case 119: return GAME_SERVER_MACHEGAMEOVER;
        case 120: return GAME_SERVER_ISNOTSINGUP;
        case 130: return SAVE_MONEY_ENJOININSURE;
        case 131: return SAVE_MONEY_ENJOINLOGIN;
        case 132: return SAVE_MONEY_NOTHISUSER;
        case 133: return SAVE_MONEY_NULLITY;
        case 134: return SAVE_MONEY_STUNDOWN;
        case 135: return SAVE_MONEY_MOORMACHINE;
        case 136: return SAVE_MONEY_LESSMONEY;
        case 137: return SAVE_MONEY_LESSGAMEMONEY;
        case 138: return SAVE_MONEY_INGAME;
        case 139: return SAVE_MONEY_BADPWD;
        case 140: return CHANGE_MONEY_LESSMONEY;
        case 141: return CHANGE_MONEY_NOTMONEY;
        case 142: return GET_USERINFO_NOUSER;
        case 143: return GET_USERINFO_FORBIDNICKMAE;
        case 144: return GET_USERINFO_INUSERNICKNAME;
        case 145: return GET_USERINFO_NULLNICKNAME;
        case 146: return UPDATE_LOGINPWD_NOTINPWD;
        case 147: return SAVEORTAKE_MONEY_ERROR;
        case 148: return TAKE_MONEY_NOCODE;
        case 149: return UPDATE_PWD_NOPWD;
        case 150: return SAVE_MONEY_NOTENOUGHMONEY;
        case 151: return MONEY_NOT_ENOUGH;
        case 152: return ROOM_FULL;
        case 153: return SING_UP_MAX;
        case 154: return SING_NOT_UP;
        case 155: return USER_LOCK_MACHINE;
        case 156: return PROP_CHANGE_LESS;
        case 157: return USER_LOGIN_OTHER;
        case 158: return LOGIN_ACCOUNT_ERROR;
        case 159: return LOGIN_PASSWORD_ERROR;
        case 160: return LOGIN_NOTFIND_GIFT;
        case 161: return LOGIN_USERSCORE_ERROR;
        case 162: return LOGIN_USERSCORE_NOTENOUGH;
        case 163: return LOGIN_UPDATE_DATE_ERROR;
        case 164: return LOGIN_BANK_PASWD_ERROR;
        case 165: return LOGIN_GIVE_ROSE_NO_ZERO;
        case 166: return LOGIN_GIVE_ROSE_TO_ME;
        case 167: return LOGIN_IP_COUNT;
        case 168: return LOGIN_MAC_COUNT;
        case 169: return INVITE_USER_SCORE;
        case 170: return USER_INVITED_SCORE;
        case 171: return RADPACKETCODING_ERR;
        case 172: return RADPACKETCODING_USED;
        case 173: return USER_INVITED_USERSELF;
        case 174: return USER_INVITED_NOEXIST;
        case 175: return RADPACKETCODING_ERROE;
        case 176: return LOGIN_MAC_EVER_COUNT;
        case 177: return LOGIN_EVENT_NOTBEGIN;
        case 178: return LOGIN_EVENT_FINISHED;
        case 179: return LOGIN_EVENT_ZZ_NOTENOUGH;
        case 180: return RADPACKETCODING_RECEIVED;
        case 181: return GAME_RANK_NOT_IN_RANK;
        case 182: return GAME_RANK_RANK_AWARD_RECVED;
        case 183: return GAME_RANK_THUMB_DONE;
        case 184: return GAME_RANK_THUMB_REACH_MAX;
        case 185: return GAME_ONLINE_TIME_LOW;
        case 186: return GAME_ONLINE_RECEIVE;
        case 187: return GAME_RANK_SAVING;
        case 188: return LOGIN_VERIFY_FAILED;
        case 189: return QIAN_DAO_TODAY_SIGNED;
        case 190: return QIAN_DAO_RECV_DISABLE;
        case 191: return QIAN_DAO_RECV_DONE;
        case 192: return RANK_TODAY_CACHE_EMPTY;
        case 193: return RANK_YESTERDAY_CACHE_EMPTY;
        case 194: return LOGIN_PASSWD_LENGTH_ERR;
        case 195: return LOGIN_PHONE_FORMAT_ERR;
        case 196: return LOGIN_VERIFYCODE_TOOFREQUENT;
        case 197: return LOGIN_USEITEM_LEVEL_NOTENOUGH;
        case 198: return LOGIN_USEPACK_INROOM;
        case 199: return LOGIN_USERPACK_FULL;
        case 200: return LOGIN_USER_ALREADY_GETPRIZE;
        case 201: return LOGIN_USER_NOFESTIVAL;
        case 202: return LOGIN_MUSTBEPOSITIVE;
        case 203: return GAME_RANK_THUMB_TO_SELF;
        case 1940: return MATCH_YI_BAO_MING;
        case 1941: return MATCH_WEI_BAO_MING;
        case 1942: return MATCH_NOT_EXISTS_TYPE;
        case 1943: return MATCH_TYPE_EMPTY;
        case 1944: return MATCH_NOT_ENOUGH_SCORE;
        case 1945: return MATCH_ALREADY_BEGIN_CANT_CANCEL;
        case 1946: return ERROR_MATCH_INFO;
        case 1947: return MATCH_STATUS_NOT_START;
        case 1948: return MATCH_ALREADY_OVER;
        case 1949: return MATCH_SIGUP_DUPLICATE;
        case 1950: return MATCH_SIGUP_USERSOCORE_ERROR;
        case 1951: return MATCH_SIGUP_USERSOCORE_LACK;
        case 1952: return MATCH_SIGUP_EMPTY_SIT;
        case 1953: return MATCH_SIGUP_CREATEMATCH_ERROR;
        case 1954: return MATCH_NOT_SIGUP_ERROR;
        case 1955: return MATCH_NOT_SIGUP_NOT_BENGIN;
        case 1956: return MATCH_NOT_SIGUP_END_BENGIN;
        case 1957: return MATCH_NOT_SIGUP_MAINTAIN;
        case 1958: return MATCH_NO_PRIZEINFO;
        case 1959: return MATCH_SIGUP_NOT_EXIST;
        case 1960: return MATCH_BEGIN_DELY;
        case 1961: return MATCH_VIP_LIMIT;
        case 1962: return MATCH_LEVEL_LIMIT;
        case 1963: return MATCH_SCORE_LIMIT;
        case 204: return NO_SUCHTHING;
        case 205: return CANT_USE;
        case 206: return NUM_NOTENOUGH;
        case 207: return CANT_SELL;
        case 208: return TODAY_UPPER_LIMIT;
        case 209: return NOT_OPEN;
        case 210: return VERSION_TOO_LOW;
        case 211: return NOT_ENOUGH_SCORE;
        case 222: return CHAT_DISABLE;
        case 223: return CHAT_LIMIT_NOT_FOUND;
        case 20001: return INVITE_USER_BIND;
        case 30001: return LOGIN_NO_SUCH_ACTIVITY;
        case 30002: return LOGIN_VIP_LEVEL_LOW;
        case 30003: return LOGIN_VIP_LEVEL_NOTEXSIT;
        case 2000: return ACTIVITY_ALREADY_RECVED;
        case 2001: return ACTIVITY_NO_SUCH_ITEM;
        case 2002: return ACTIVITY_DISALLOWED;
        case 3000: return GAMETASK_SCORE_ERROR;
        case 3001: return GAMETASK_IS_NOT_OVER;
        case 3002: return GAMETASK_IS_NOT_REF;
        case 3010: return GAME_TIAOZHAN_SCORE_LOW;
        case 3011: return LOGIN_GET_XCLB;
        case 3012: return USE_TOO_FREQUENT;
        case 3013: return ITEM_EXPIRE;
        case 3014: return LOGIN_GET_YK;
        case 3015: return ITEM_COMPOSE_CANTCOMPOSE;
        case 3016: return ITEM_COMPOSE_CANTBECOMPOSE;
        case 3017: return USER_DEF_ERROR;
        case 3018: return MATCH_IN_LEVEL_LOW;
        case 3019: return MATCH_IN_VIP_LOW;
        case 3100: return ARENA_ON;
        case 3101: return ARENA_COUNT_OVER;
        case 3102: return ARENA_ITEM_LACK;
        case 3103: return ARENA_FEE_LACK;
        case 3104: return ARENA_LEVEL_LOW;
        case 3105: return ARENA_VIP_LOW;
        case 3106: return ARENA_UNLOCK_ITEM_LOW;
        case 3107: return ARENA_LOCK;
        case 3108: return ARENA_TIME_OFF;
        case 3109: return ARENA_ROOM_LACK;
        case 3200: return READ_PACK_INVALID;
        case 3201: return READ_PACK_NOT_EXIST;
        case 3202: return READ_PACK_NOT_LOSE;
        case 3203: return READ_PACK_NOT_AC_REPEAT;
        case 3204: return READ_PACK_NOT_MAC_REPEAT;
        case 3205: return FREE_GOLD_EXCHANGE_NOT_ENOUGH_SCORE;
        case 3206: return DISABLED_AFTER_ACCESS_NEW_FREEGOLD;
        case 3207: return LOGIN_DISABLE_ANONYMOUS;
        case 3208: return VERIFYCODE_INVALID;
        case 3209: return MOBILE_ALREADY_BIND_OTHER;
        case 3210: return MOBILE_ALREADY_BIND;
        case 3211: return MOBILE_NOT_BIND;
        case 3212: return MOBILE_INCONSISTENT_BIND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
            public ErrorCode findValueByNumber(int number) {
              return ErrorCode.valueOf(number);
            }
          };

    private final int value;

    private ErrorCode(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.ErrorCode)
  }

  public interface ErrorMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ErrorMsg)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .proto.ErrorCode errorcode = 1;</code>
     *
     * <pre>
     * 错误编码
     * </pre>
     */
    boolean hasErrorcode();
    /**
     * <code>optional .proto.ErrorCode errorcode = 1;</code>
     *
     * <pre>
     * 错误编码
     * </pre>
     */
    proto.ErrorMsgProto.ErrorCode getErrorcode();

    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();

    /**
     * <code>optional int32 cmd = 3;</code>
     *
     * <pre>
     * 请求命令
     * </pre>
     */
    boolean hasCmd();
    /**
     * <code>optional int32 cmd = 3;</code>
     *
     * <pre>
     * 请求命令
     * </pre>
     */
    int getCmd();
  }
  /**
   * Protobuf type {@code proto.ErrorMsg}
   */
  public static final class ErrorMsg extends
      com.google.protobuf.GeneratedMessageLite implements
      // @@protoc_insertion_point(message_implements:proto.ErrorMsg)
      ErrorMsgOrBuilder {
    // Use ErrorMsg.newBuilder() to construct.
    private ErrorMsg(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ErrorMsg(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}

    private static final ErrorMsg defaultInstance;
    public static ErrorMsg getDefaultInstance() {
      return defaultInstance;
    }

    public ErrorMsg getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.ByteString unknownFields;
    private ErrorMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.ByteString.Output unknownFieldsOutput =
          com.google.protobuf.ByteString.newOutput();
      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
          com.google.protobuf.CodedOutputStream.newInstance(
              unknownFieldsOutput);
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              proto.ErrorMsgProto.ErrorCode value = proto.ErrorMsgProto.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFieldsCodedOutput.writeRawVarint32(tag);
                unknownFieldsCodedOutput.writeRawVarint32(rawValue);
              } else {
                bitField0_ |= 0x00000001;
                errorcode_ = value;
              }
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              msg_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cmd_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        try {
          unknownFieldsCodedOutput.flush();
        } catch (java.io.IOException e) {
        // Should not happen
        } finally {
          unknownFields = unknownFieldsOutput.toByteString();
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ErrorMsg> PARSER =
        new com.google.protobuf.AbstractParser<ErrorMsg>() {
      public ErrorMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ErrorMsg(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ErrorMsg> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ERRORCODE_FIELD_NUMBER = 1;
    private proto.ErrorMsgProto.ErrorCode errorcode_;
    /**
     * <code>optional .proto.ErrorCode errorcode = 1;</code>
     *
     * <pre>
     * 错误编码
     * </pre>
     */
    public boolean hasErrorcode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .proto.ErrorCode errorcode = 1;</code>
     *
     * <pre>
     * 错误编码
     * </pre>
     */
    public proto.ErrorMsgProto.ErrorCode getErrorcode() {
      return errorcode_;
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 2;</code>
     *
     * <pre>
     * 错误内容
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CMD_FIELD_NUMBER = 3;
    private int cmd_;
    /**
     * <code>optional int32 cmd = 3;</code>
     *
     * <pre>
     * 请求命令
     * </pre>
     */
    public boolean hasCmd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 cmd = 3;</code>
     *
     * <pre>
     * 请求命令
     * </pre>
     */
    public int getCmd() {
      return cmd_;
    }

    private void initFields() {
      errorcode_ = proto.ErrorMsgProto.ErrorCode.NETWORK_EROR;
      msg_ = "";
      cmd_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, errorcode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cmd_);
      }
      output.writeRawBytes(unknownFields);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, errorcode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cmd_);
      }
      size += unknownFields.size();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static proto.ErrorMsgProto.ErrorMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.ErrorMsgProto.ErrorMsg prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code proto.ErrorMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          proto.ErrorMsgProto.ErrorMsg, Builder>
        implements
        // @@protoc_insertion_point(builder_implements:proto.ErrorMsg)
        proto.ErrorMsgProto.ErrorMsgOrBuilder {
      // Construct using proto.ErrorMsgProto.ErrorMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        errorcode_ = proto.ErrorMsgProto.ErrorCode.NETWORK_EROR;
        bitField0_ = (bitField0_ & ~0x00000001);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        cmd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public proto.ErrorMsgProto.ErrorMsg getDefaultInstanceForType() {
        return proto.ErrorMsgProto.ErrorMsg.getDefaultInstance();
      }

      public proto.ErrorMsgProto.ErrorMsg build() {
        proto.ErrorMsgProto.ErrorMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public proto.ErrorMsgProto.ErrorMsg buildPartial() {
        proto.ErrorMsgProto.ErrorMsg result = new proto.ErrorMsgProto.ErrorMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.errorcode_ = errorcode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msg_ = msg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cmd_ = cmd_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(proto.ErrorMsgProto.ErrorMsg other) {
        if (other == proto.ErrorMsgProto.ErrorMsg.getDefaultInstance()) return this;
        if (other.hasErrorcode()) {
          setErrorcode(other.getErrorcode());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000002;
          msg_ = other.msg_;
          
        }
        if (other.hasCmd()) {
          setCmd(other.getCmd());
        }
        setUnknownFields(
            getUnknownFields().concat(other.unknownFields));
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.ErrorMsgProto.ErrorMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.ErrorMsgProto.ErrorMsg) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private proto.ErrorMsgProto.ErrorCode errorcode_ = proto.ErrorMsgProto.ErrorCode.NETWORK_EROR;
      /**
       * <code>optional .proto.ErrorCode errorcode = 1;</code>
       *
       * <pre>
       * 错误编码
       * </pre>
       */
      public boolean hasErrorcode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .proto.ErrorCode errorcode = 1;</code>
       *
       * <pre>
       * 错误编码
       * </pre>
       */
      public proto.ErrorMsgProto.ErrorCode getErrorcode() {
        return errorcode_;
      }
      /**
       * <code>optional .proto.ErrorCode errorcode = 1;</code>
       *
       * <pre>
       * 错误编码
       * </pre>
       */
      public Builder setErrorcode(proto.ErrorMsgProto.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        errorcode_ = value;
        
        return this;
      }
      /**
       * <code>optional .proto.ErrorCode errorcode = 1;</code>
       *
       * <pre>
       * 错误编码
       * </pre>
       */
      public Builder clearErrorcode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        errorcode_ = proto.ErrorMsgProto.ErrorCode.NETWORK_EROR;
        
        return this;
      }

      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            msg_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        
        return this;
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msg_ = getDefaultInstance().getMsg();
        
        return this;
      }
      /**
       * <code>optional string msg = 2;</code>
       *
       * <pre>
       * 错误内容
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msg_ = value;
        
        return this;
      }

      private int cmd_ ;
      /**
       * <code>optional int32 cmd = 3;</code>
       *
       * <pre>
       * 请求命令
       * </pre>
       */
      public boolean hasCmd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 cmd = 3;</code>
       *
       * <pre>
       * 请求命令
       * </pre>
       */
      public int getCmd() {
        return cmd_;
      }
      /**
       * <code>optional int32 cmd = 3;</code>
       *
       * <pre>
       * 请求命令
       * </pre>
       */
      public Builder setCmd(int value) {
        bitField0_ |= 0x00000004;
        cmd_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 cmd = 3;</code>
       *
       * <pre>
       * 请求命令
       * </pre>
       */
      public Builder clearCmd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cmd_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ErrorMsg)
    }

    static {
      defaultInstance = new ErrorMsg(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:proto.ErrorMsg)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
